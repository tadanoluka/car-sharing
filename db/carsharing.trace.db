2023-05-22 17:28:15 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2023-05-22 17:32:00 jdbc[4]: exception
org.h2.jdbc.JdbcSQLNonTransientException: The object is already closed [90007-200]
2023-05-22 17:46:35 jdbc[5]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column count does not match; SQL statement:
INSERT INTO company
VALUES ('Super')
 [21002-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.get(DbException.java:170)
	at org.h2.command.dml.Insert.prepare(Insert.java:319)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.engine.Session.prepareCommand(Session.java:595)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:164)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDaoImpl.addCompany(CompanyDaoImpl.java:84)
	at carsharing.TUIHandler.createCompanyHandler(TUIHandler.java:57)
	at carsharing.TUIHandler.run(TUIHandler.java:21)
	at carsharing.Main.main(Main.java:17)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:160)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$1(MainMethodExecutor.java:188)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-22 20:10:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE
    COMPANY_ID[*] INT NOT NULL,
    CONSTRAINT FK_COMPANY_ID FOREIGN KEY (COMPANY_ID)
    REFERENCES COMPANY (ID)
);
"; expected "NOT, NULL, COMMENT, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE car (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
    company_id INT NOT NULL,
    CONSTRAINT fk_company_id FOREIGN KEY (company_id)
    REFERENCES company (id)
);
 [42001-200]
2023-05-22 20:11:25 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE
    COMPANY_ID[*] INT NOT NULL,
    CONSTRAINT FK_COMPANY_ID FOREIGN KEY (COMPANY_ID)
    REFERENCES COMPANY (ID)
);
"; expected "NOT, NULL, COMMENT, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE car (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
    company_id INT NOT NULL,
    CONSTRAINT fk_company_id FOREIGN KEY (company_id)
    REFERENCES company (id)
);
 [42001-200]
2023-05-22 20:13:16 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE
    COMPANY_ID[*] INT NOT NULL,
    CONSTRAINT FK_COMPANY_ID FOREIGN KEY (COMPANY_ID)
    REFERENCES COMPANY(ID)
);
"; expected "NOT, NULL, COMMENT, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE car (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
    company_id INT NOT NULL,
    CONSTRAINT fk_company_id FOREIGN KEY (company_id)
    REFERENCES company(id)
);
 [42001-200]
2023-05-22 20:14:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE CAR (
    ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL UNIQUE
    COMPANY_ID[*] INT NOT NULL,
    CONSTRAINT FK_COMPANY_ID FOREIGN KEY (COMPANY_ID)
    REFERENCES COMPANY(ID)
);
"; expected "NOT, NULL, COMMENT, CHECK, REFERENCES, ,, )"; SQL statement:
CREATE TABLE car (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
    company_id INT NOT NULL,
    CONSTRAINT fk_company_id FOREIGN KEY (company_id)
    REFERENCES company(id)
);
 [42001-200]
2023-05-22 20:18:04 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "COMPANY" because "FK_COMPANY_ID" depends on it; SQL statement:
DROP TABLE IF EXISTS company; [90107-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:98)
	at org.h2.command.ddl.DropTable.update(DropTable.java:124)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.jdbc.JdbcStatement.executeUpdateInternal(JdbcStatement.java:168)
	at org.h2.jdbc.JdbcStatement.executeUpdate(JdbcStatement.java:126)
	at carsharing.CompanyDaoImpl.dropCompanyTable(CompanyDaoImpl.java:24)
	at carsharing.Main.main(Main.java:13)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.invokeMain(MainMethodExecutor.java:160)
	at org.hyperskill.hstest.testing.execution.MainMethodExecutor.lambda$launch$1(MainMethodExecutor.java:188)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-05-22 20:18:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE company (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
); [42101-200]
2023-05-22 20:19:25 jdbc[7]: exception
org.h2.jdbc.JdbcSQLNonTransientException: No data is available [2000-200]
2023-05-22 22:58:31 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "COMPANY" already exists; SQL statement:
CREATE TABLE company (
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
); [42101-200]
2023-05-22 23:04:49 jdbc[12]: exception
org.h2.jdbc.JdbcSQLNonTransientException: No data is available [2000-200]
2023-05-22 23:20:54 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: No data is available [2000-200]
2023-05-22 23:21:31 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: No data is available [2000-200]
2023-05-22 23:24:45 jdbc[13]: exception
org.h2.jdbc.JdbcSQLNonTransientException: No data is available [2000-200]
